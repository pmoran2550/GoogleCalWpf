<Window x:Class="Schuss.GoogleCalWpf.GCalMainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:conv="clr-namespace:Schuss.GoogleCalWpf.Converters"
        xmlns:commonStyle="clr-namespace:Schuss.GoogleCalWpf.Themes"
        Title="Google Calendar Event Transfer" Height="790" Width="1024" MinHeight="500" MinWidth="1000" >
    
    <Window.Resources>
        <conv:BooleanToStringConverter x:Key="BooleanToStringConverter" />

        <conv:BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />
    </Window.Resources>
    
    <Grid Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Background="{DynamicResource {x:Static commonStyle:BrushResources.HeaderBackgroundBrushKey}}" >
            <TextBlock Style="{DynamicResource {x:Static commonStyle:TextResources.StandardHeaderTextKey}}"  HorizontalAlignment="Center" VerticalAlignment="Center" 
                       Text="Google Calendar Event Transfer" />
        </Grid>
        <Grid Grid.Row="1" Background="{DynamicResource {x:Static commonStyle:BrushResources.MainBackgroundBrushKey}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="100" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" >
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >
                    <Ellipse Fill="{Binding Path=Connected, Converter={StaticResource BooleanToStringConverter}}" Height="15" Stroke="Black" Width="15" Margin="0,10,5,10"/>
                    <Button HorizontalAlignment="Center" Margin="5,10,0,10" VerticalAlignment="Center" Width="70" Height="30" Background="#FF1c1c1c" Content="Connect"
                            Command="{Binding Path=ConnectCalendarService}" Style="{DynamicResource {x:Static commonStyle:ButtonResources.RaisedButtonKey}}">
                    </Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Text="Start Date: " Style="{DynamicResource {x:Static commonStyle:TextResources.StandardTextKey}}" Margin="0,0,5,0" 
                                HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <DatePicker Name="startDate" HorizontalAlignment="Center" VerticalAlignment="Top" 
                                SelectedDate="{Binding Path=StartDate}" />
                </StackPanel>
            </StackPanel>
            <Grid Grid.Row="1" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" BorderBrush="White" BorderThickness="2" CornerRadius="20" Margin="10">
                    <Grid HorizontalAlignment="Center" Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" >
                            <TextBlock Text="Calendar: " Style="{DynamicResource {x:Static commonStyle:TextResources.StandardTextKey}}" Margin="0,0,5,0" 
                                HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <ComboBox Name="Calendar1ComboBox" HorizontalAlignment="Center" VerticalAlignment="Center"
                                     MinWidth="150" MinHeight="20" ItemsSource="{Binding Path=CalendarList}" DisplayMemberPath="Summary" 
                                     IsEditable="False"  SelectionChanged="Calendar1ComboBox_SelectionChanged_1" SelectedItem="{Binding Path=SourceCalendar}" 
                                      Style="{DynamicResource {x:Static commonStyle:ComboBoxResources.StandardComboBoxKey}}" Background="Gray" Foreground="White" IsReadOnly="True">
                            </ComboBox>
                        </StackPanel>
                        <DataGrid Grid.Row="1" Name="Calendar1Events" HorizontalAlignment="Center" Margin="10,5,10,20" VerticalAlignment="Top"
                                  ItemsSource="{Binding Path=EventList1}" AutoGenerateColumns="False" IsReadOnly="True" CanUserSortColumns="False"
                                  CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False" 
                              Style="{DynamicResource {x:Static commonStyle:DataGridResources.StandardDataGridKey}}"    
                              ColumnHeaderStyle="{DynamicResource {x:Static commonStyle:DataGridColumnHeaderResources.StandardDataGridColumnHeaderKey}}" 
                              CellStyle="{DynamicResource {x:Static commonStyle:DataGridResources.StandardDataGridCellKey}}" 
                              RowStyle="{DynamicResource {x:Static commonStyle:DataGridResources.StandardDataGridRowKey}}"
                            BorderBrush="White" BorderThickness="2" Padding="1">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Start Date" Binding="{Binding Path=StartDate, Mode=OneWay}" Width="70"  >
                                    <DataGridTextColumn.ElementStyle >
                                        <Style TargetType="TextBlock">
                                            <Setter Property="TextWrapping" Value="Wrap" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Start Time" Binding="{Binding Path=StartTime, Mode=OneWay}" Width="70" >
                                    <DataGridTextColumn.ElementStyle >
                                        <Style TargetType="TextBlock">
                                            <Setter Property="TextWrapping" Value="Wrap" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Description" Binding="{Binding Path=Description, Mode=OneWay}" Width="200" >
                                    <DataGridTextColumn.ElementStyle >
                                        <Style TargetType="TextBlock">
                                            <Setter Property="TextWrapping" Value="Wrap" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </Border>
                <Grid Grid.Column="1" >
                    <Button HorizontalAlignment="Center" VerticalAlignment="Center" Width="90" Height="50" Background="#FF1c1c1c" Click="Button_Click_1"
                        Style="{DynamicResource {x:Static commonStyle:ButtonResources.RaisedButtonKey}}" Content=">>" FontFamily="Segoe UI" FontSize="26">
                    </Button>
                </Grid>
                <Border Grid.Column="2" BorderBrush="White" BorderThickness="2" CornerRadius="20" Margin="10">
                    <Grid HorizontalAlignment="Center" Margin="10" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="30" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" >
                            <TextBlock Text="Calendar: " Style="{DynamicResource {x:Static commonStyle:TextResources.StandardTextKey}}" Margin="0,0,5,0" 
                            HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <ComboBox Name="Calendar2ComboBox" HorizontalAlignment="Center" VerticalAlignment="Center"
                                 MinWidth="150" MinHeight="20" ItemsSource="{Binding Path=CalendarList}" DisplayMemberPath="Summary" 
                                  IsEditable="False" SelectionChanged="Calendar2ComboBox_SelectionChanged_1" SelectedItem="{Binding Path=DestinationCalendar}" 
                                      Style="{DynamicResource {x:Static commonStyle:ComboBoxResources.StandardComboBoxKey}}" Background="Gray" Foreground="White" IsReadOnly="True">
                            </ComboBox>
                        </StackPanel>
                        <DataGrid Grid.Row="1" Name="Calendar2Events" HorizontalAlignment="Center" Margin="10,5,5,10" VerticalAlignment="Top"
                              ItemsSource="{Binding Path=EventList2}" AutoGenerateColumns="False" IsReadOnly="True" CanUserSortColumns="False"
                              CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False"
                              SelectedItem="{Binding Path=SelectedDestinationEvent}"
                              Style="{DynamicResource {x:Static commonStyle:DataGridResources.StandardDataGridKey}}"    
                              ColumnHeaderStyle="{DynamicResource {x:Static commonStyle:DataGridColumnHeaderResources.StandardDataGridColumnHeaderKey}}" 
                              RowStyle="{DynamicResource {x:Static commonStyle:DataGridResources.StandardDataGridRowKey}}"
                              CellStyle="{DynamicResource {x:Static commonStyle:DataGridResources.StandardDataGridCellKey}}"
                              BorderBrush="White" BorderThickness="2" Padding="1">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Start Date" Binding="{Binding Path=StartDate, Mode=OneWay}" Width="70" >
                                    <DataGridTextColumn.ElementStyle >
                                        <Style TargetType="TextBlock">
                                            <Setter Property="TextWrapping" Value="Wrap" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Start Time" Binding="{Binding Path=StartTime, Mode=OneWay}" Width="70" >
                                    <DataGridTextColumn.ElementStyle >
                                        <Style TargetType="TextBlock">
                                            <Setter Property="TextWrapping" Value="Wrap" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Description" Binding="{Binding Path=Description, Mode=OneWay}" Width="200" >
                                    <DataGridTextColumn.ElementStyle >
                                        <Style TargetType="TextBlock">
                                            <Setter Property="TextWrapping" Value="Wrap" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="center">
                            <Button Name="DeleteButton2" Content="Delete" Width="70" Style="{DynamicResource {x:Static commonStyle:ButtonResources.RaisedButtonKey}}"
                                  Visibility="{Binding Path=DestinationEventSelected, Converter={StaticResource bool2VisibilityConverter}}"  Click="Delete_Click"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
        <Grid Grid.Row="2" Background="{DynamicResource {x:Static commonStyle:BrushResources.FooterBackgroundBrushKey}}" >
            <Button HorizontalAlignment="Center" VerticalAlignment="Center" Width="70" Height="30" Background="#FF1c1c1c" Content="Exit" 
                            Command="{Binding Path=ExitApp}" Style="{DynamicResource {x:Static commonStyle:ButtonResources.RaisedButtonKey}}">

            </Button>
        </Grid>
    </Grid>
</Window>
